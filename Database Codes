CREATE TABLE DeliverySchedules (
    ScheduleID INT PRIMARY KEY AUTO_INCREMENT,
    ShippingID INT NOT NULL,
    PickupLocation VARCHAR(255) NOT NULL,
    DeliveryLocation VARCHAR(255) NOT NULL,
    PreferredTimeSlots VARCHAR(100) NOT NULL,
    FOREIGN KEY (ShippingID) REFERENCES ShippingDetails(ShippingID)
);

CREATE TABLE ServiceableAreas(
    AreaID INT PRIMARY KEY AUTO_INCREMENT,
    AreaName VARCHAR(100) NOT NULL,
    DistanceFromHQ INT NOT NULL
);


CREATE TABLE ShippingDetails (
    ShippingID INT PRIMARY KEY AUTO_INCREMENT,
    CustomerID INT NOT NULL,
    ShippingMethod VARCHAR(50) NOT NULL,
    ShippingCost DECIMAL(10, 2) NOT NULL,
    ShippingDate DATE NOT NULL,
    FOREIGN KEY (CustomerID) REFERENCES CustomerDetails(CustomerID)
);

CREATE TABLE CustomerDetails (
    CustomerID INT PRIMARY KEY AUTO_INCREMENT,
    FirstName VARCHAR(50) NOT NULL,
    LastName VARCHAR(50) NOT NULL,
    Email VARCHAR(100) UNIQUE NOT NULL,
    Phone VARCHAR(15),
    Address VARCHAR(255) NOT NULL
);



CREATE TABLE ServicableAreas(
    AreaID INT PRIMARY KEY AUTO_INCREMENT,
    AreaName VARCHAR(100) NOT NULL,
    DistanceFromHQ INT NOT NULL CHECK (DistanceFromHQ BETWEEN 1 AND 100)
);



INSERT INTO ServicableAreas (AreaName, DistanceFromHQ) VALUES
('Rehoboth', 85),
('Okahandja', 70),
('Otjiwarongo', 250),
('Swakopmund', 380),
('Walvis Bay', 400),
('Gobabis', 200),
('Mariental', 270),
('Karibib', 200),
('Outjo', 320),
('Ondangwa', 700),
('Oshakati', 710),
('Rundu', 730),
('Luderitz', 700),
('Keetmanshoop', 500),
('Tsumeb', 420),
('Katima Mulilo', 1050),
('Henties Bay', 370),
('Omaruru', 240),
('Grootfontein', 460),
('Usakos', 190);
-------------------------------------------UPDATED VERSION---------------------------------------------------------


-- Create the database
CREATE DATABASE dsa2;

-- Use the newly created database
USE dsa2;

-- Create the DeliverySchedules table
CREATE TABLE DeliverySchedules (
    ScheduleID INT PRIMARY KEY AUTO_INCREMENT,
    ShippingID INT NOT NULL,
    PickupLocation VARCHAR(255) NOT NULL,
    DeliveryLocation VARCHAR(255) NOT NULL,
    PreferredTimeSlots VARCHAR(100) NOT NULL, 
    FOREIGN KEY (ShippingID) REFERENCES ShippingDetails(ShippingID)
);

-- Create the ServiceableAreas table
CREATE TABLE ServiceableAreas (
    AreaID INT PRIMARY KEY AUTO_INCREMENT,
    AreaName VARCHAR(100) NOT NULL,
    DistanceFromHQ INT NOT NULL
);

-- Create the ShippingDetails table
CREATE TABLE ShippingDetails (
    ShippingID INT PRIMARY KEY AUTO_INCREMENT,
    CustomerID INT NOT NULL,
    ShippingMethod VARCHAR(50) NOT NULL,
    ShippingCost DECIMAL(10, 2) NOT NULL,
    ShippingDate DATE NOT NULL,
    FOREIGN KEY (CustomerID) REFERENCES CustomerDetails(CustomerID)
);

-- Create the CustomerDetails table
CREATE TABLE CustomerDetails (
    CustomerID INT PRIMARY KEY AUTO_INCREMENT,
    FirstName VARCHAR(50) NOT NULL,
    LastName VARCHAR(50) NOT NULL,
    Email VARCHAR(100) UNIQUE NOT NULL,
    Phone VARCHAR(15),
    Address VARCHAR(255) NOT NULL
);

-- Insert data into ServiceableAreas table
INSERT INTO ServiceableAreas (AreaName, DistanceFromHQ)
VALUES 
('Windhoek', 1),
('Okahandja', 2),
('Rehoboth', 3),
('Gobabis', 4),
('Mariental', 5),
('Otjiwarongo', 6),
('Karibib', 7),
('Swakopmund', 8),
('Walvis Bay', 9),
('Tsumeb', 10),
('Outjo', 11),
('Rundu', 50),
('Keetmanshoop', 51),
('LÃ¼deritz', 52),
('Ongwediva', 75),
('Ondangwa', 76),
('Oshakati', 77),
('Eenhana', 90),
('Omuthiya', 91),
('Oshikango', 100);

-------------------------------------------new edition-----------------------------------------
ALTER TABLE serviceablearea
ADD COLUMN Country varchar(100);

UPDATE ServiceableAreas
SET Country = 'Namibia'
WHERE DistanceFromHQ <= 100;

INSERT INTO ServiceableAreas (AreaName, DistanceFromHQ, Country)
VALUES 
('Benguela', 104, 'Angola'),
('Luanda', 107, 'Angola'),
('Cabinda', 109, 'Angola');

INSERT INTO ServiceableAreas (AreaName, DistanceFromHQ, Country)
VALUES 
('Pretoria', 120, 'SouthAfrica'),
('Durban', 123, 'SouthAfrica'),
('CapeTown', 124, 'SouthAfrica');

INSERT INTO ServiceableAreas (AreaName, DistanceFromHQ, Country)
VALUES 
('Berlin', 180, 'Germany'),
('Paris', 190, 'France'),
('Tokyo', 320, 'Japan');

-------------------------------for diago---------------------------------
function saveToDatabase(Client Client, ShipmentRequest shipmentRequest) returns error? {
    // Insert into customerdetails table
    sql:ParameterizedQuery insertCustomerQuery = `INSERT INTO customerdetails (FirstName, LastName, Phone) VALUES (${Client.Firstname}, ${Client.Lastname}, ${Client.phone})`;
    sql:ExecutionResult _ = check dbClient->execute(insertCustomerQuery);

    // Insert into deliveryservices table
    sql:ParameterizedQuery insertDeliveryQuery = `INSERT INTO deliveryservices (PickupLocation, DeliveryLocation) VALUES (${shipmentRequest.pickupLocation}, ${shipmentRequest.deliveryLocation})`;
    sql:ExecutionResult _ = check dbClient->execute(insertDeliveryQuery);

    sql:ParameterizedQuery insertShippingQuery = `INSERT INTO shippingdetails (ShippingMethod) VALUES (${shipmentRequest.shipmentType})`;
    sql:ExecutionResult _ = check dbClient->execute(insertShippingQuery);
}
mysql:Client dbClient = check new (host = "127.0.0.1", user = "bennyman123", password = "Sunday11", database = "dsaproject");


------------------------------NN-------------------------------------

CREATE TABLE shipment_requests (
    id INT AUTO_INCREMENT PRIMARY KEY,
    shipmentType VARCHAR(255),
    pickupLocation VARCHAR(255),
    deliveryLocation VARCHAR(255),
    preferredTime INT,
    firstName VARCHAR(255),
    lastName VARCHAR(255),
    contactNumber VARCHAR(255)
);


